{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"13zYErNptlp_ZEcqtXb8sOA1mm7Fg3Gcu","timestamp":1663785100786}],"collapsed_sections":["pTsxXBy1KItx","pB0yoA4p99tc","A_zCw7aceDzW","sQya6ARVFKn6","JROw0NSASJYQ","nBGdwwnN8Oo6","NBMmCa-m3JEn"]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"SHCfrAI-Gpys","outputId":"31824c94-8b95-47ad-a2ea-ee6da5956e1c","executionInfo":{"status":"ok","timestamp":1665045774556,"user_tz":-180,"elapsed":15,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}}},"source":["# Версия Numpy\n","import numpy as np\n","np.__version__"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1.21.6'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":1}]},{"cell_type":"code","metadata":{"id":"1laHYjpkasPq"},"source":["# Встроенная документация\n","np?"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["В основе NumPy - тип массива ndarray:\n","\n","быстрый, потребляющий мало памяти, многомерный массив;\n","\n","для массива доступен широкий набор высокоэффективных математических и других операций для манипулирования информацией (в первую очередь - числовой)."],"metadata":{"id":"alpU55bUceXj"}},{"cell_type":"markdown","metadata":{"id":"L1vtUh4WIU-O"},"source":["# Введение в массивы\n"]},{"cell_type":"code","metadata":{"id":"pptcJAkFG6PK","colab":{"base_uri":"https://localhost:8080/"},"outputId":"152370b3-3c3b-4ceb-c093-8fa0e8c817cc"},"source":["# Создание массива целочисленных значений из обычного списка:\n","data = [1, 4, 2, 5, 3, 7]\n","a = np.array(data)\n","a\n","# type(a)\n","# или сразу \n","# np.array([1, 4, 5])\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["a = np.array(data).reshape(3, 2)\n","# a.ndim\n","# a.shape\n","# a.size\n","a"],"metadata":{"id":"p7pVKI_cHHNK","colab":{"base_uri":"https://localhost:8080/"},"outputId":"cf211ad2-273a-45cf-abc6-40cf40e36f3a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 4],\n","       [2, 5],\n","       [3, 7]])"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"ktzDK8FsKFyw","colab":{"base_uri":"https://localhost:8080/"},"outputId":"ef4b7aef-8763-4665-ba15-3f44f91c803a","executionInfo":{"status":"ok","timestamp":1665045777568,"user_tz":-180,"elapsed":6,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}}},"source":["# В отличие от списков в Python, библиотека Numpy ограничивается массивами с элементами одного типа. \n","# В случае несовпадения типов переменных, numpy повышает приведение типов:\n","np.array([3.14, 4, 2, 3]) "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3.14, 4.  , 2.  , 3.  ])"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"qAgRsWL3LVMG","colab":{"base_uri":"https://localhost:8080/"},"outputId":"d5500c43-82e5-4627-f468-3dca06509d92"},"source":["# Задание типа данных явным образом:\n","np.array([1, 2, 3, 4], dtype='float32')\n","# или\n","np.array([1, 2, 3, 4], dtype=np.float32)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 2., 3., 4.], dtype=float32)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"_sWeQlbxFG9V","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1663785231919,"user_tz":-180,"elapsed":5,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"db8f2680-ef50-4b95-a689-529cb5a0d7c5"},"source":["# или \n","data = np.array([1, 2, 5], dtype=np.float)\n","print(data)\n","print(data.astype(np.int64))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1. 2. 5.]\n","[1 2 5]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  \n"]}]},{"cell_type":"code","source":["# Все доступные типы можно найти в словаре sctypes\n","np.sctypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8Zlz9Zkg_ILN","outputId":"6ce32aa8-0938-4f3f-e3b3-5cccab8539cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'int': [numpy.int8, numpy.int16, numpy.int32, numpy.int64],\n"," 'uint': [numpy.uint8, numpy.uint16, numpy.uint32, numpy.uint64],\n"," 'float': [numpy.float16, numpy.float32, numpy.float64, numpy.float128],\n"," 'complex': [numpy.complex64, numpy.complex128, numpy.complex256],\n"," 'others': [bool, object, bytes, str, numpy.void]}"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"zpX0WRcxNNo1","colab":{"base_uri":"https://localhost:8080/"},"outputId":"093fee6d-d5b4-4fab-a1b5-012a10212e9c","executionInfo":{"status":"ok","timestamp":1663785390713,"user_tz":-180,"elapsed":400,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}}},"source":["# Вложенные списки преобразуются в массив:\n","np.array([range(i, i + 4) for i in [2, 5, 7]])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 2,  3,  4,  5],\n","       [ 5,  6,  7,  8],\n","       [ 7,  8,  9, 10]])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"96ta4d6pNjz3","colab":{"base_uri":"https://localhost:8080/"},"outputId":"5f7dca55-c148-46ec-b4bf-22ce747f3d48"},"source":["# Создание массива целых чисел длины 10, заполненного нулями:\n","np.zeros(10, dtype=int)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"fpKgIvYV7-iX","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7531927b-0615-49f6-fa52-f14e854101d4"},"source":["# Создание массива размером 3х5 значений с плавающей точкой, заполненного единицами:\n","np.ones((3,5), dtype=float)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1.]])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"XhX1SpXu8VjH","colab":{"base_uri":"https://localhost:8080/"},"outputId":"cd07ee72-3b1b-427c-c093-13ab5c1b863a"},"source":["# Создание массива размером 3х5 заполненного значением 3.14:\n","np.full((3,5), 3.14)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[3.14, 3.14, 3.14, 3.14, 3.14],\n","       [3.14, 3.14, 3.14, 3.14, 3.14],\n","       [3.14, 3.14, 3.14, 3.14, 3.14]])"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"D_QURsJQ-oMx","colab":{"base_uri":"https://localhost:8080/"},"outputId":"818a9319-8b4a-429e-b69a-c7835f9ec56f"},"source":["# Создание массива из 5 значений, равномерно располагающихся между 0 и 1:\n","np.linspace(0, 1, 5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.  , 0.25, 0.5 , 0.75, 1.  ])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"_jnpdK3-8ofA","colab":{"base_uri":"https://localhost:8080/"},"outputId":"a4de1abb-0d18-41c8-fb8b-e5889bfc6ad5"},"source":["# Создание массива, заполненного линейной последовательностью с 0 до 20, с шагом 2 (аналогично встроенной функции range),\n","# но отличие от питоновского range в том, что arange работает с дробными числами:\n","print(np.arange(0, 20, 2))\n","print(np.arange(2, 30.5, 1.6))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 0  2  4  6  8 10 12 14 16 18]\n","[ 2.   3.6  5.2  6.8  8.4 10.  11.6 13.2 14.8 16.4 18.  19.6 21.2 22.8\n"," 24.4 26.  27.6 29.2]\n"]}]},{"cell_type":"code","metadata":{"id":"waOSL3RNHPK_","colab":{"base_uri":"https://localhost:8080/"},"outputId":"c70c9e76-1f22-4323-ffd5-cda79334b047"},"source":["# Создание единичной матрицы размером 3х3:\n","np.eye(3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.]])"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["**Создание массивов из случайных значений**"],"metadata":{"id":"4_OFZ1kVB9Y6"}},{"cell_type":"code","source":["# Если мы хотим создать массив из 5 случайных чисел типа int в numpy в промежутке [0, 10)\n","data = np.random.randint(0, 10, 5)\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sZM8UD-DB8bp","outputId":"9e661252-28e1-4b8a-f05b-22fb415c9eab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7, 7, 9, 7, 2])"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"UKoAob2WG1iy","colab":{"base_uri":"https://localhost:8080/"},"outputId":"bfce4d0c-aa94-458b-95c7-e99089d788e8"},"source":["# Создание массива размером 3х3 случайных числа int в промежутке [0, 10):\n","np.random.randint(0, 10, (3,3))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[4, 2, 0],\n","       [5, 5, 5],\n","       [8, 1, 8]])"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"WSxz8zj0-_Xf","colab":{"base_uri":"https://localhost:8080/"},"outputId":"31b80d0e-8619-48c8-d086-e8b862c10b5b"},"source":["# Создание массива размером 3х3 равномерно распределенных случайных значений от 0 до 1\n","np.random.random((3,3))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.42392067, 0.20582377, 0.84690639],\n","       [0.50993544, 0.81595933, 0.46405701],\n","       [0.55588236, 0.58140888, 0.3710227 ]])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Создание массива размером 2х3 случайных чисел с нормальным распределением\n","np.random.randn(2,3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LHUUMO1QmhDg","outputId":"b55ca499-81f7-4566-ead1-ace75ed1d9a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.79582328, -0.12557266,  0.04888833],\n","       [-1.42205634,  0.73269595,  2.13099923]])"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"xigBWQPW_ZUq","colab":{"base_uri":"https://localhost:8080/"},"outputId":"57696699-c8f3-44f4-f582-f052fdf29316"},"source":["# Создание массива размером 3х3 нормально распределенных случайных значений с медианой 0 и стандартным отклонением 1:\n","np.random.normal(0, 1, (3,3))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.19944536, -0.02088617,  1.87978981],\n","       [-0.03156301, -0.13150179,  0.55519253],\n","       [ 2.44547849, -0.58711398, -0.44875072]])"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# Случайные числа типа float\n","data = np.random.sample(5)\n","print(data)\n","\n","data = np.random.sample((3,4))\n","print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BDS27mR_C_2i","outputId":"b603619b-053b-421e-a936-d73a947b3ebc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.00243343 0.22687743 0.22017513 0.90823522 0.50246168]\n","[[0.24509724 0.79593828 0.25046543 0.51103252]\n"," [0.68518697 0.58852066 0.62304159 0.94224555]\n"," [0.79602114 0.55875877 0.67952609 0.86794258]]\n"]}]},{"cell_type":"code","metadata":{"id":"res7uRNAWPkx","colab":{"base_uri":"https://localhost:8080/"},"outputId":"64c1d561-91b3-4117-b016-8b2dbdb5e6bc","executionInfo":{"status":"ok","timestamp":1663804804357,"user_tz":-180,"elapsed":380,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}}},"source":["# Псевдогенератор - генератор случайных чисел с заданным начальным значением, чтобы гарантировать \n","# генерацию одних и тех же массивов при каждом выполнении\n","np.random.seed(0)\n","\n","x1 = np.random.randint(10, size=6) # одномерный массив\n","x2 = np.random.randint(10, size=(3, 4)) # двумерный массив\n","x3 = np.random.randint(10, size=(3, 4, 5)) # трехмерный массив\n","\n","print(x1)\n","print(x2)\n","print(x3)\n","\n","# data = np.random.randn(2,3)\n","# print(data)\n","\n","# data = np.random.randint(0, 10, (2,3))\n","# print(data)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 0 3 3 7 9]\n","[[3 5 2 4]\n"," [7 6 8 8]\n"," [1 6 7 7]]\n","[[[8 1 5 9 8]\n","  [9 4 3 0 3]\n","  [5 0 2 3 8]\n","  [1 3 3 3 7]]\n","\n"," [[0 1 9 9 0]\n","  [4 7 3 2 7]\n","  [2 0 0 4 5]\n","  [5 6 8 4 1]]\n","\n"," [[4 9 8 1 1]\n","  [7 9 9 3 6]\n","  [7 2 0 3 5]\n","  [9 4 4 6 4]]]\n"]}]},{"cell_type":"markdown","source":["**Атрибуты numpy-массива**"],"metadata":{"id":"0caSdjPMELwP"}},{"cell_type":"code","source":["print('x3 ndim:', x3.ndim) # размерность\n","print('x3 shape:', x3.shape) # размер каждого измерения\n","print('x3 size:', x3.size) # общий размер массива\n","print('dtype:', x3.dtype) # тип данных массива\n","print('itemsize:', x3.itemsize, 'bytes') # выводит размер в байтах каждого элемента массива\n","print('nbytes:', x3.nbytes, 'bytes') # полный размер массива в байтах nbytes = itemsize * size"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qg_XIeX-EN_g","outputId":"1cf84319-522e-4ca8-ef9a-9df5d361916a","executionInfo":{"status":"ok","timestamp":1663804807849,"user_tz":-180,"elapsed":426,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x3 ndim: 3\n","x3 shape: (3, 4, 5)\n","x3 size: 60\n","dtype: int64\n","itemsize: 8 bytes\n","nbytes: 480 bytes\n"]}]},{"cell_type":"markdown","source":["### Упражнения"],"metadata":{"id":"BsKtG4rF_kwP"}},{"cell_type":"markdown","source":["1. Импортируйте библиотеку NumPy и выведите ее версию.\n","2. Создайте массив размерностью 3х3 из вложенного списка Python.\n","3. Создайте массив размером 5х5 случайных чисел int в промежутке [0, 15).\n","4. Создайте массив из 10 значений, равномерно располагающихся между 0 и 25.\n","5. Создайте массив размером 5х6 случайных чисел с нормальным распределением.\n","6. Создайте единичную матрицу, размером 5х5.\n","7. Создайте матрицу размерностью 4х5, заполненную нулями.\n","8. Создайте массив размерностью 5х5, заполненный числом 2.7.\n","9. Создайте массив из 7 случайных чисел типа int в numpy в промежутке [0, 15)\n","10. Заставьте массив из задания 9 при каждом новом выводе не менять значения элементов массива.\n"],"metadata":{"id":"TuLB0Xbo_sOx"}},{"cell_type":"markdown","source":["1) Импортируйте библиотеку NumPy и выведите ее версию."],"metadata":{"id":"jj8irZoJXmwu"}},{"cell_type":"code","source":["import numpy as np\n","np.__version__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"_PiIgayRXlwt","executionInfo":{"status":"ok","timestamp":1663785981212,"user_tz":-180,"elapsed":524,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"0c4cfc10-392b-4303-8c33-810bb62da1ce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1.21.6'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["2) Создайте массив размерностью 3х3 из вложенного списка Python."],"metadata":{"id":"1pYm_gF8X2o8"}},{"cell_type":"code","source":["spisok =[[2, 4, 5], [3, 6, 8], [7, 4, 2], ]\n","np.array(spisok).reshape(3, 3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pgaaTQtfX16_","executionInfo":{"status":"ok","timestamp":1663786196410,"user_tz":-180,"elapsed":5,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"77329db3-d74c-4cd7-b8a5-d5f5d6cd8d08"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[2, 4, 5],\n","       [3, 6, 8],\n","       [7, 4, 2]])"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["3) Создайте массив размером 5х5 случайных чисел int в промежутке [0, 15)"],"metadata":{"id":"wKvhkik3YsCI"}},{"cell_type":"code","source":["import random\n","np.random.randint(0, 15, (5, 5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LFr_POyNYvSo","executionInfo":{"status":"ok","timestamp":1663786253298,"user_tz":-180,"elapsed":6,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"2d36701e-6362-4080-db8e-d8de22dce16a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 6,  1,  4,  0, 10],\n","       [ 8,  0,  4, 11, 12],\n","       [ 0,  1,  9,  3,  7],\n","       [ 0, 14,  6, 13, 11],\n","       [ 6,  8, 11, 14,  6]])"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["4) Создайте массив из 10 значений, равномерно располагающихся между 0 и 25."],"metadata":{"id":"QTM7X9VeY8Kj"}},{"cell_type":"code","source":["np.linspace(0, 25, 10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9RfFkSZOY_9m","executionInfo":{"status":"ok","timestamp":1663786340838,"user_tz":-180,"elapsed":4,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"529c736f-df0b-4205-9916-73b55f06b55e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.        ,  2.77777778,  5.55555556,  8.33333333, 11.11111111,\n","       13.88888889, 16.66666667, 19.44444444, 22.22222222, 25.        ])"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["5) Создайте массив размером 5х6 случайных чисел с нормальным распределением."],"metadata":{"id":"Uk8dRArfZPn7"}},{"cell_type":"code","source":["np.random.randn(5, 6)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jXvjLIzPZDAf","executionInfo":{"status":"ok","timestamp":1663786458464,"user_tz":-180,"elapsed":367,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"7f2f5304-ba6e-4f3f-b6ca-b525a9789a31"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.14295229, -0.83691671,  0.48187216,  0.44732527,  0.62810483,\n","         0.69503975],\n","       [ 0.09723938, -0.305782  , -0.32627839,  1.19180039,  0.63939269,\n","        -0.18173106],\n","       [ 0.65496288, -0.09392955, -0.9576015 ,  0.98485125, -0.06955505,\n","        -0.70875124],\n","       [ 1.45054603,  2.16267287,  0.27560634,  0.43768066, -0.50135127,\n","         1.68415678],\n","       [-0.85190817, -1.7289716 , -0.54337892, -0.31719513, -0.8572182 ,\n","        -2.32363678]])"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["6) Создайте единичную матрицу, размером 5х5."],"metadata":{"id":"bOfNnvZUZuMP"}},{"cell_type":"code","source":["np.eye(5, 5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k18yeJ5oZx7d","executionInfo":{"status":"ok","timestamp":1663786508187,"user_tz":-180,"elapsed":5,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"524fca96-0733-4801-c996-3de77aa276ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0., 0., 0.],\n","       [0., 1., 0., 0., 0.],\n","       [0., 0., 1., 0., 0.],\n","       [0., 0., 0., 1., 0.],\n","       [0., 0., 0., 0., 1.]])"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["7) Создайте матрицу размерностью 4х5, заполненную нулями"],"metadata":{"id":"oJWiN7VJZ3EY"}},{"cell_type":"code","source":["np.zeros((4, 5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ygmDI9JpZ6uF","executionInfo":{"status":"ok","timestamp":1663786555573,"user_tz":-180,"elapsed":4,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"a792e0bb-b83f-4415-8d22-1e9c4ade99f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0.]])"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["8) Создайте массив размерностью 5х5, заполненный числом 2.7"],"metadata":{"id":"RW-xcqdwaEz_"}},{"cell_type":"code","source":["np.full((5, 5), 2.7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"55Bh26u1aJBj","executionInfo":{"status":"ok","timestamp":1663786639173,"user_tz":-180,"elapsed":6,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"5d1f3472-95ef-4daa-a132-78ed86c1fe67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[2.7, 2.7, 2.7, 2.7, 2.7],\n","       [2.7, 2.7, 2.7, 2.7, 2.7],\n","       [2.7, 2.7, 2.7, 2.7, 2.7],\n","       [2.7, 2.7, 2.7, 2.7, 2.7],\n","       [2.7, 2.7, 2.7, 2.7, 2.7]])"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["9) Создайте массив из 7 случайных чисел типа int в numpy в промежутке [0, 15)"],"metadata":{"id":"tcUACZUyaWxF"}},{"cell_type":"code","source":["np.random.randint(0, 15, 7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QFG-qw9kabwk","executionInfo":{"status":"ok","timestamp":1663786804781,"user_tz":-180,"elapsed":557,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"49838d99-265e-4147-8481-4a27209cc25e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([14,  7, 10,  3,  5,  2,  8])"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["10) Заставьте массив из задания 9 при каждом новом выводе не менять значения элементов массива"],"metadata":{"id":"lA0UAK5WbAwO"}},{"cell_type":"code","source":["np.random.seed(0)\n","np.random.randint(0, 15, 7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xv4sQy-xbGNQ","executionInfo":{"status":"ok","timestamp":1663792931097,"user_tz":-180,"elapsed":394,"user":{"displayName":"Аня Конева","userId":"05066345844249364087"}},"outputId":"d519b30f-cd2c-4200-ac1f-ee37801523e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([12,  5,  0,  3, 11,  3,  7])"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","metadata":{"id":"pTsxXBy1KItx"},"source":["# Простые операции с массивами"]},{"cell_type":"markdown","metadata":{"id":"bE7qSUH-apAV"},"source":["**Индексация массива: доступ к отдельным элементам**"]},{"cell_type":"code","source":["np.random.seed(0)\n","\n","x4 = np.random.randint(10, size=6) # одномерный массив\n","x5 = np.random.randint(10, size=(3, 4)) # двумерный массив\n","x6 = np.random.randint(10, size=(3, 4, 5)) # трехмерный массив"],"metadata":{"id":"Mn1erslTR2rH"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"eZ-VsaS8a-7o","colab":{"base_uri":"https://localhost:8080/"},"outputId":"87ecac63-ce56-4441-fa90-9190ec3f3801"},"source":["print(x4)\n","print(x4[0])\n","print(x4[4])\n","print(x4[-1])\n","\n","print(x5)\n","print(x5[0,0])\n","print(x5[2,0])\n","\n","x5[0,0] = 12\n","print(x5)\n","\n","# В отличие от списков языка Python , у массивов NumPy фиксированный тип данных, при вставке \n","# в массив числа с плавающей точкой, оно будет усечено:\n","# x4[0] = 9.243\n","# print(x4)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[5 0 3 3 7 9]\n","5\n","7\n","9\n","[[12  5  2  4]\n"," [ 7  6  8  8]\n"," [ 1  6  7  7]]\n","12\n","1\n","[[12  5  2  4]\n"," [ 7  6  8  8]\n"," [ 1  6  7  7]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"PDEZFxQBfEFF"},"source":["**Срезы массивов, доступ к подмассивам**"]},{"cell_type":"markdown","metadata":{"id":"AxHHU1mbiN4E"},"source":["1.Одномерные подмассивы"]},{"cell_type":"code","metadata":{"id":"2ZP6Z2zmfLW0","colab":{"base_uri":"https://localhost:8080/"},"outputId":"62519ab1-bcb1-4d06-d75c-cb20f95de8ff"},"source":["# Срезы как в Python\n","x = np.arange(10)\n","print(x)\n","print(x[:5]) # первые 5 элементов\n","print(x[5:]) # после индекса = 5\n","print(x[4:7]) # подмассив из середины\n","print(x[::2]) # каждый второй элемент\n","print(x[1::2]) # каждый второй, начиная с индекса 1\n","print(x[::-1]) # в обратном порядке\n","print(x[5::-2]) # каждый второй в обратном порядке, начиная с индекса 5"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2 3 4 5 6 7 8 9]\n","[0 1 2 3 4]\n","[5 6 7 8 9]\n","[4 5 6]\n","[0 2 4 6 8]\n","[1 3 5 7 9]\n","[9 8 7 6 5 4 3 2 1 0]\n","[5 3 1]\n"]}]},{"cell_type":"markdown","metadata":{"id":"XdfRF4kCg6CW"},"source":["2.Многомерные подмассивы"]},{"cell_type":"code","metadata":{"id":"JXnJqUT6g8U0","colab":{"base_uri":"https://localhost:8080/"},"outputId":"e0539b0f-f1bb-43c2-d7a1-2190780834fc"},"source":["# многомерные срезы создаются похожим образом, с разделением срезов запятыми\n","print(x2)\n","print(x2[:2, :3]) # две строки, три столбца\n","print(x2[:3, ::2]) # три строки, каждый второй столбец\n","print(x2[::-1, ::-1]) # измерения подмассивов также можно переворачивать"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[12  5  2  4]\n"," [ 7  6  8  8]\n"," [ 1  6  7  7]]\n","[[12  5  2]\n"," [ 7  6  8]]\n","[[12  2]\n"," [ 7  8]\n"," [ 1  7]]\n","[[ 7  7  6  1]\n"," [ 8  8  6  7]\n"," [ 4  2  5 12]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"q6OVRw-DgHup"},"source":["3.Доступ к строкам и столбцам массива"]},{"cell_type":"code","metadata":{"id":"XW1sWwThgQhq","colab":{"base_uri":"https://localhost:8080/"},"outputId":"c0721a13-1e55-47f6-b7af-0945993788a0"},"source":["print(x2)\n","print(x2[:, 0]) # первый столбец массива x2\n","print(x2[0, :]) # первая строка массива x2\n","print(x2[0]) # в случае вывода строки можно написать проще"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[12  5  2  4]\n"," [ 7  6  8  8]\n"," [ 1  6  7  7]]\n","[12  7  1]\n","[12  5  2  4]\n","[12  5  2  4]\n"]}]},{"cell_type":"markdown","metadata":{"id":"VR31T4uejVpX"},"source":["4.Подмассивы, предназначенные только для чтения представления"]},{"cell_type":"code","metadata":{"id":"BZnzajsvjcNo","colab":{"base_uri":"https://localhost:8080/"},"outputId":"e5b01974-4e52-428f-85ce-094d1d2d9a1f"},"source":["# Срезы массивов возвращают представления (views), а не копии (copies) данных массивов. Это отличие от срезов списков Python, \n","# где возвращаются копии.\n","print(x2)\n","x2_sub = x2[:2, :2]\n","print(x2_sub)\n","\n","# Теперь, если изменим этот массив, то увидим, что исходный массив поменялся:\n","x2_sub[0,0] = 55\n","print(x2_sub)\n","print(x2)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[99  5  2  4]\n"," [ 7  6  8  8]\n"," [ 1  6  7  7]]\n","[[99  5]\n"," [ 7  6]]\n","[[55  5]\n"," [ 7  6]]\n","[[55  5  2  4]\n"," [ 7  6  8  8]\n"," [ 1  6  7  7]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"8XhbcBBVlJae"},"source":["5.Создание копий массивов"]},{"cell_type":"code","metadata":{"id":"HHdMDqtAlONa","colab":{"base_uri":"https://localhost:8080/"},"outputId":"55b7c1a9-4174-4acc-fc70-dbbd2eb13b04"},"source":["x2_sub_copy = x2[:2, :2].copy()\n","print(x2_sub_copy)\n","\n","# Если теперь поменяем массив, то исходный останется неизменным:\n","x2_sub_copy[0, 0] = 42\n","print(x2_sub_copy)\n","print(x2)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[55  5]\n"," [ 7  6]]\n","[[42  5]\n"," [ 7  6]]\n","[[55  5  2  4]\n"," [ 7  6  8  8]\n"," [ 1  6  7  7]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"wwrBIHVvqG0h"},"source":["**Изменение формы массивов**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_F5MQ5tIqR6L","outputId":"6509b368-65f8-413e-9558-ddd814e076ca"},"source":["grid = np.arange(1, 10).reshape((3, 3))\n","print(grid)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [4 5 6]\n"," [7 8 9]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5pF7aiUdrEJp","outputId":"5f351208-c6af-4a3c-ce57-73d9f4de7121"},"source":["x = np.array([1, 2, 3])\n","x.reshape((1, 3)) # преобразование в вектор-строку с помощью reshape\n","# x[np.newaxis, :] # преобразование в вектор-строку с помощью newaxis\n","\n","# x.reshape((3, 1)) # преобразование в вектор-столбец с помощью reshape\n","# x[:, np.newaxis] # преобразование в вектор-столбец с помощью newaxis"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3]])"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LqdF0s4rNbWZ","outputId":"5670b456-f8db-4403-d627-5879f8f979ae"},"source":["x = np.array([(1, 2, 3), (4, 5, 6)])\n","print(x)\n","print(np.resize(x, (2, 2))) # вырезает часть матрицы\n","print(np.resize(x, (1,3)))\n","print(np.resize(x, (3,5)))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [4 5 6]]\n","[[1 2]\n"," [3 4]]\n","[[1 2 3]]\n","[[1 2 3 4 5]\n"," [6 1 2 3 4]\n"," [5 6 1 2 3]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"WIS8Lpw0s0nD"},"source":["**Слияние и разбиение массивов**"]},{"cell_type":"markdown","metadata":{"id":"xvi6zhk2t1KA"},"source":["1.Слияние массивов"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4aEWopkVs6kg","outputId":"d7c5513f-58ed-42c9-f623-f7e48a974cae"},"source":["x = np.array([1, 2, 3])\n","y = np.array([3, 2, 1])\n","print(np.concatenate([x, y]))\n","\n","z = [99, 99, 99]\n","print(np.concatenate([x, y, z]))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 3 2 1]\n","[ 1  2  3  3  2  1 99 99 99]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R5NLejsVuzoG","outputId":"163e4878-14ca-4e91-e7e7-de73e1d63c94"},"source":["grid = np.array([[1, 2, 3],\n","                 [4, 5, 6]])\n","print(np.concatenate([grid, grid])) # слияние по первой оси координат\n","print(np.concatenate([grid, grid], axis=1)) # слияние по второй оси координат"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [4 5 6]\n"," [1 2 3]\n"," [4 5 6]]\n","[[1 2 3 1 2 3]\n"," [4 5 6 4 5 6]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vHGZPeySw-tL","outputId":"c5260ce5-9e18-4519-8ada-4713b211bd42"},"source":["x = np.array([1, 2, 3])\n","grid = np.array([[9, 8, 7],\n","                 [6, 5, 4]])\n","print(np.vstack([x, grid]))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [9 8 7]\n"," [6 5 4]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4aaQh-V-xcCV","outputId":"8c303e29-425a-4fd4-8ffc-076b9c6951e0"},"source":["y = np.array([[99],\n","              [99]])\n","np.hstack([grid, y])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 9,  8,  7, 99],\n","       [ 6,  5,  4, 99]])"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"LYGf4LHxxzca"},"source":["2.Разбиение массивов"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RsNqrg-wx2ie","outputId":"2e97404a-04af-4607-cd0a-0d8d4b23dd49"},"source":["x = [1, 2, 3, 99, 99, 3, 2, 1]\n","x1, x2, x3 = np.split(x, [3, 5])\n","print(x1, x2, x3)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3] [99 99] [3 2 1]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QygU7Zbb1EfU","outputId":"4a00e13b-6c6b-4ea9-a7b1-53063df94ce7"},"source":["grid = np.arange(16).reshape((4, 4))\n","print(grid)\n","\n","upper, lower = np.vsplit(grid, [2])\n","print(upper)\n","print(lower)\n","\n","left, right = np.hsplit(grid, [2])\n","print(left)\n","print(right)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0  1  2  3]\n"," [ 4  5  6  7]\n"," [ 8  9 10 11]\n"," [12 13 14 15]]\n","[[0 1 2 3]\n"," [4 5 6 7]]\n","[[ 8  9 10 11]\n"," [12 13 14 15]]\n","[[ 0  1]\n"," [ 4  5]\n"," [ 8  9]\n"," [12 13]]\n","[[ 2  3]\n"," [ 6  7]\n"," [10 11]\n"," [14 15]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"pB0yoA4p99tc"},"source":["# Выполнение вычислений над массивами: универсальные функции"]},{"cell_type":"markdown","metadata":{"id":"Cfs1pYff_CEH"},"source":["**Введение в универсальные функции**"]},{"cell_type":"markdown","metadata":{"id":"QrPbSr0LrII4"},"source":["На языке Python для обхода массива значений приходится в цикле каждый раз вызывать функцию и делать одни и те же вычисления. Это невыгодно каждый раз вычислять одну и ту же функцию, поэтому в NumPy ввели универсальные функции (ufuncs), которые осуществляют компилируемые процедуры со статической типизацией (векторизованная операция). Векторизованный подход спроектирован так, чтобы переносить цикл в скомпилированный слой, лежащий в основе библиотеки NumPy, что обеспечивает высокую производительность."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BVyXRQmFG-SI","outputId":"ee8946fe-0629-4774-9701-b1198baf961e"},"source":["arr = np.array([1, 2, 3, 4, 5])\n","arr\n","np.sqrt(arr)\n","np.sin(arr)\n","# np.cos(arr)\n","# np.log(arr)\n","# np.exp(arr)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427])"]},"metadata":{},"execution_count":62}]},{"cell_type":"markdown","metadata":{"id":"A_zCw7aceDzW"},"source":["# Агрегирование: минимум, максимум и все, что посередине"]},{"cell_type":"markdown","metadata":{"id":"g78LkRaggaf7"},"source":["Очень часто при работе с большими объемами данных первый шаг заключается в вычислении сводных статистических показателей по этим данным: среднее значение, стандартное отклонение, сумма, произведение, медиана, минимум и максимум, квантили и т.д."]},{"cell_type":"markdown","metadata":{"id":"2_Tm3fIohBzW"},"source":["**Сумма значений из массива**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HHEAgZnfeMqG","outputId":"bb3d1702-f6db-4ca2-8687-802d68834cb6"},"source":["import numpy as np\n","L = np.random.random(100)\n","print(sum(L)) # средствами Python\n","print(np.sum(L)) # средствами NumPy"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["52.12818058833704\n","52.12818058833702\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QanD2glYjLqV","outputId":"013ececd-7151-48d0-eb56-6fd2ca6cde19"},"source":["big_array = np.random.rand(1000000)\n","print(big_array[:5])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.97575572 0.79868474 0.22020435 0.69286357 0.80256287]\n"]}]},{"cell_type":"code","source":["%timeit sum(big_array)\n","%timeit np.sum(big_array)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jc7iJFtug7EW","outputId":"5a077b7f-fcac-4d33-ed33-0dcb9f4e5aae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["67.5 ms ± 819 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n","238 µs ± 4.37 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\n"]}]},{"cell_type":"markdown","source":["Суммирование по осям"],"metadata":{"id":"slavhMT6lSx6"}},{"cell_type":"code","source":["arr = np.random.randint(0, 12, (3, 4))\n","print(arr)\n","\n","print(arr.sum(axis=0)) # сумма по столбцам\n","print(arr.sum(axis=1)) # сумма по строкам"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a1eyBuQkkyhk","outputId":"996503ce-3983-4768-bb3a-fa67f757293c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 4  2  4  5]\n"," [ 0  2  2 10]\n"," [ 0  9  0  3]]\n","[ 4 13  6 18]\n","[15 14 12]\n"]}]},{"cell_type":"markdown","metadata":{"id":"pZmAZRXV9yjF"},"source":["Минимум, максимум и среднее значение"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X7H_V7xU93aO","outputId":"e2320f02-6aa5-4f58-a0c0-5c138bffa413"},"source":["min(big_array), max(big_array) # Python"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3.85613797782014e-07, 0.99999911202237)"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6eU5attG-JZE","outputId":"2f85923f-7a37-4494-d637-8756b50816b5"},"source":["np.min(big_array), np.max(big_array) # NumPy"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3.85613797782014e-07, 0.99999911202237)"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Az7sWJ9g-XOm","outputId":"54fe9fd8-dde8-4aa7-ba1f-2b7f7de1c92d"},"source":["%timeit min(big_array)\n","%timeit np.min(big_array)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["46.3 ms ± 428 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n","146 µs ± 6.09 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LgnM18dB_DXr","outputId":"7f61cd1c-3b59-4e06-ecf5-c3ee5f97b037"},"source":["print(big_array.min(), big_array.max(), big_array.sum())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3.85613797782014e-07 0.99999911202237 500047.08811625664\n"]}]},{"cell_type":"code","source":["big_array.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O_dh0-n5wsVt","outputId":"044c8c55-aca1-4f57-fa4b-1762a0d6992e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5000470881162566"]},"metadata":{},"execution_count":106}]},{"cell_type":"markdown","source":["Среднее значение, минимум и максимум по осям"],"metadata":{"id":"_fryp5Fivuiy"}},{"cell_type":"code","source":["print(arr.min(axis=1), arr.max(axis=0), arr.mean(axis=1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RY9nSSMavgSw","outputId":"63257364-70a2-44db-c2cb-7ad15bc7717d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 0 0] [ 4  9  4 10] [3.75 3.5  3.  ]\n"]}]},{"cell_type":"markdown","metadata":{"id":"sQya6ARVFKn6"},"source":["# Операции над массивами. Транслирование"]},{"cell_type":"markdown","metadata":{"id":"JtuyPHJJFgyW"},"source":["Еще один способ применения операций векторизации - транслирование. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MvLTYCBDF0Js","outputId":"8aca5548-094d-4a85-bb40-7e3316738a1a"},"source":["# Для массивов одного размера бинарные операции выполняются поэлементно.\n","import numpy as np\n","\n","a = np.array([0, 1, 2])\n","b = np.array([5, 5, 5])\n","a + b"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 7])"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BqFfGwfGG8XG","outputId":"3c3a221f-e40b-4f31-ebb6-0759b6d41b5d"},"source":["# Транслирование дает выполнять бинарные операции над массивами различных размеров:\n","a + 5"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 7])"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0IeHZeYXHWal","outputId":"5d8ca0fd-0acf-49cd-e0d3-9257f2de9e32"},"source":["# Операция сложения одномерного и двумерного массивов:\n","m = np.ones((3, 3))\n","print(m)\n","print(m + a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 1. 1.]\n"," [1. 1. 1.]\n"," [1. 1. 1.]]\n","[[1. 2. 3.]\n"," [1. 2. 3.]\n"," [1. 2. 3.]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hHPRDHQpH_MV","outputId":"ad707e14-58b4-4834-8ca1-b50bc1be67fe"},"source":["# Более сложный случай - транслирование обоих массивов:\n","a = np.arange(3)\n","b = np.arange(3)[:, np.newaxis]\n","\n","print(a)\n","print(b)\n","\n","a + b"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2]\n","[[0]\n"," [1]\n"," [2]]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 2],\n","       [1, 2, 3],\n","       [2, 3, 4]])"]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","metadata":{"id":"3XWIqDDgLZal"},"source":["**Правила транслирования**\n","\n","Правило 1. Если размерность двух массивов отличается, форма массива с мешьшей размерностью дополняется единицами с ведущей (левой) стороны.\n","\n","Правило 2. Если форма двух массивов не совпадает в каком-то измерении, массив с формой, равной 1в данном измерении, растягивается\n","вплоть до соответствия форме другого массива.\n","\n","Правило 3. Если в каком-то измерении размеры массивов различаются и ни один не равен 1, генерируется ошибка."]},{"cell_type":"code","metadata":{"id":"zf1Y4-oqLXzm","colab":{"base_uri":"https://localhost:8080/"},"outputId":"97075698-db6e-4a41-c84c-6a3c673e9d91"},"source":["# Пример 1.\n","M =np.ones((2, 3))\n","a = np.arange(3)\n","print(M)\n","print(a)\n","\n","# print(M.shape, a.shape)\n","\n","M + a"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 1. 1.]\n"," [1. 1. 1.]]\n","[0 1 2]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[1., 2., 3.],\n","       [1., 2., 3.]])"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LiPWCA9ePCMP","outputId":"47ce7749-435c-4db3-9c4d-b6e3f48ad09c"},"source":["# Пример 2.\n","a = np.arange(3).reshape(3, 1)\n","b = np.arange(3)\n","print(a)\n","print(b)\n","\n","print(a.shape, b.shape)\n","a + b"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0]\n"," [1]\n"," [2]]\n","[0 1 2]\n","(3, 1) (3,)\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 2],\n","       [1, 2, 3],\n","       [2, 3, 4]])"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LhOYcpauPqKD","outputId":"7b3f836c-df3b-477f-a8bb-d69717d2498f"},"source":["# Пример 3.\n","M = np.ones((3, 2))\n","a = np.arange(3)\n","print(M)\n","print(a)\n","\n","print(M.shape, a.shape)\n","\n","# M + a - выдаст ошибку\n","M + a[:, np.newaxis]\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 1.]\n"," [1. 1.]\n"," [1. 1.]]\n","[0 1 2]\n","(3, 2) (3,)\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[1., 1.],\n","       [2., 2.],\n","       [3., 3.]])"]},"metadata":{},"execution_count":86}]},{"cell_type":"markdown","metadata":{"id":"JROw0NSASJYQ"},"source":["# Сравнения, маски и булева логика"]},{"cell_type":"markdown","metadata":{"id":"tFKQi2A5wbQE"},"source":["Маскирование удобно для извлечения, модификации, подсчета или других манипуляций со значениями в массиве по какому-либо критерию."]},{"cell_type":"markdown","metadata":{"id":"LIYk5kX_w-6M"},"source":["**Операторы сравнения как универсальные функции**"]},{"cell_type":"code","metadata":{"id":"86dyrAXBxGW3","colab":{"base_uri":"https://localhost:8080/"},"outputId":"fdaae886-d316-4b20-968f-aa2db3d1cfee"},"source":["# Операторы сравнения в NumPy реализованы как универсальные функции\n","x = np.array([1, 2, 3, 4, 5])\n","print(x < 3)\n","print(x > 3)\n","print(x <= 3)\n","print(x >= 3)\n","print(x != 3)\n","print(x == 3)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ True  True False False False]\n","[False False False  True  True]\n","[ True  True  True False False]\n","[False False  True  True  True]\n","[ True  True False  True  True]\n","[False False  True False False]\n"]}]},{"cell_type":"code","metadata":{"id":"lntV9BITyFza","colab":{"base_uri":"https://localhost:8080/"},"outputId":"022453f9-8a7f-41a3-b555-f8f085e058ef"},"source":["# Так же и с массивами:\n","rng = np.random.RandomState(0)\n","x = rng.randint(10, size=(3,4))\n","print(x)\n","print(x < 6)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5 0 3 3]\n"," [7 9 3 5]\n"," [2 4 7 6]]\n","[[ True  True  True  True]\n"," [False False  True  True]\n"," [ True  True False False]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"NthYlahByk8i"},"source":["**Работа с булевыми массивами**"]},{"cell_type":"markdown","metadata":{"id":"cszEkenO4IPm"},"source":["Подсчет количества элементов"]},{"cell_type":"code","metadata":{"id":"l4MtAgvhysXE","colab":{"base_uri":"https://localhost:8080/"},"outputId":"5060e502-0099-4f49-bab7-a9b965fb83e4"},"source":["rng = np.random.RandomState(0)\n","x = rng.randint(10, size=(3,4))\n","print(x)\n","\n","count = np.count_nonzero(x < 6) # сколько значенией х < 6 в массиве?\n","print(count)\n","count = np.sum(x < 6)\n","print(count)\n","count = np.sum(x < 6, axis=1) # сколько значенией х < 6 содержится в каждой строке? \n","print(count)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5 0 3 3]\n"," [7 9 3 5]\n"," [2 4 7 6]]\n","8\n","8\n","[4 2 2]\n"]}]},{"cell_type":"code","metadata":{"id":"2vRrEgmMz_5X","colab":{"base_uri":"https://localhost:8080/"},"outputId":"106bd6cf-f582-4936-86c5-0b103499c87d"},"source":["count = np.any(x > 8) # имеются ли значения больше 8?\n","print(count)\n","count = np.any(x < 0)\n","print(count)\n","count = np.all(x < 10) # все ли значения меньше 10?\n","print(count)\n","count = np.all(x == 6)\n","print(count)\n","count = np.all(x < 8, axis=1) # все ли значения в каждой строке меньше 8?\n","print(count)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n","True\n","False\n","[ True False  True]\n"]}]},{"cell_type":"markdown","metadata":{"id":"c1j9VWb_4NvQ"},"source":["Булевы операторы"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mc2TEyJl4CDD","outputId":"a37264ce-e808-46b2-f248-0f06b57afdfa"},"source":["rng = np.random.RandomState(0)\n","x = rng.randint(10, size=(3,4))\n","print(x)\n","count = np.sum((x > 2) & (x < 6)) # можно использовать побитовые операторы для более сложных запросов\n","print(count)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5 0 3 3]\n"," [7 9 3 5]\n"," [2 4 7 6]]\n","6\n"]}]},{"cell_type":"markdown","metadata":{"id":"h4pT9ao06Vji"},"source":["**Булевы массивы как маски**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Lf4vKI66IIG","outputId":"7678f732-2bc4-46ef-cdda-5fa62955cff5"},"source":["rng = np.random.RandomState(0)\n","x = rng.randint(10, size=(3,4))\n","print(x)\n","print(x < 5)\n","# чтобы выбрать нужные значения из массива, нужно проиндексировать исходный массив по этому булеву массиву\n","# эта операция называется маскирование\n","print(x[x < 5]) "],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[5 0 3 3]\n"," [7 9 3 5]\n"," [2 4 7 6]]\n","[[False  True  True  True]\n"," [False False  True False]\n"," [ True  True False False]]\n","[0 3 3 3 2 4]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"nBGdwwnN8Oo6"},"source":["# \"Прихотливая\" индексация"]},{"cell_type":"markdown","metadata":{"id":"ijFoT32mOD57"},"source":["Прихотливая индексация похожа на простую индексацию, но вместо скалярных значений передаются массивы индексов с целью одновременного доступа к нескольким элементам."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LU17SRIFOdSA","outputId":"27a7e5c0-b6e6-406c-a0db-0433e128c154"},"source":["import numpy as np\n","rand = np.random.RandomState(42)\n","\n","x = rand.randint(100, size=10)\n","print(x)\n","\n","ind = [3, 7, 4]\n","print(x[ind])\n","\n","ind = np.array([[3, 7],\n","                [4, 5]])\n","\n","print(x[ind])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[51 92 14 71 60 20 82 86 74 74]\n","[71 86 60]\n","[[71 86]\n"," [60 20]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q4dSZWdPPkVD","outputId":"85117a2c-1478-4e91-dbfa-344c53e9b046"},"source":["# В случае многомерных массивов:\n","x = np.arange(12).reshape((3,4))\n","print(x)\n","\n","row = np.array([0, 1, 2])\n","col = np.array([2, 1, 3])\n","print(x[row, col])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0  1  2  3]\n"," [ 4  5  6  7]\n"," [ 8  9 10 11]]\n","[ 2  5 11]\n"]}]},{"cell_type":"markdown","metadata":{"id":"BYeMZK2WQ4Qm"},"source":["**Комбинированная индексация**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9USeVovXQ98N","outputId":"bb228f08-4cac-4d8f-afda-5ac5ec2ac716"},"source":["x = np.arange(12).reshape((3,4))\n","print(x)\n","\n","print(x[2, [2, 0, 1]])\n","print(x[1:, [2, 0, 1]])\n","\n","mask = np.array([1, 0, 1, 0], dtype=bool)\n","print(x[row[:, np.newaxis], mask])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[ 0  1  2  3]\n"," [ 4  5  6  7]\n"," [ 8  9 10 11]]\n","[10  8  9]\n","[[ 6  4  5]\n"," [10  8  9]]\n","[[ 0  2]\n"," [ 4  6]\n"," [ 8 10]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"59l-9yBOktRA"},"source":["**Изменение массивов с помощью прихотливой индексации**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M-vwa1n3lE7k","outputId":"d967bd0f-9e1f-4bb4-b3d6-9cabb3db7ab4"},"source":["x = np.arange(10)\n","i = np.array([2, 1, 8, 4])\n","x[i] = 99\n","print(x)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[ 0 99 99  3 99  5  6  7 99  9]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"on9SiJWilpJW","outputId":"9774b76a-20e0-4ac2-ca83-75c37f90697d"},"source":["# Однако если индекс повторяется, то:\n","x = np.zeros(10)\n","x[[0, 0]] = [4, 6]\n","print(x)\n","\n","i = [2, 3, 3, 4, 4, 4]\n","x[i] += 1\n","print(x)\n","\n","# а если надо, чтоб инкрементировалось несколько раз:\n","x = np.zeros(10)\n","np.add.at(x, i, 1)\n","print(x)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[6. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n","[6. 0. 1. 1. 1. 0. 0. 0. 0. 0.]\n","[0. 0. 1. 2. 3. 0. 0. 0. 0. 0.]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NBMmCa-m3JEn"},"source":["# Сортировка массивов"]},{"cell_type":"markdown","metadata":{"id":"nEbfV3IeUaQ8"},"source":["**Быстрая сортировка**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VewIHhryRUV4","outputId":"6d8e7faa-b03d-40e6-ff1e-7020077456d6"},"source":["# Сортировка входного массива без его изменения\n","x = np.array([2, 1, 4, 3, 5])\n","print(np.sort(x))\n","\n","# Сортировка с изменением имеющегося массива\n","x.sort()\n","print(x)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1 2 3 4 5]\n","[1 2 3 4 5]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"z6MBfbZdTI6a","colab":{"base_uri":"https://localhost:8080/"},"outputId":"59d9cff9-5a21-47ab-821c-6d809a30edbf"},"source":["# Сортирует и возвращает индексы отсортированных элементов\n","x = np.array([2, 1, 4, 3, 5])\n","i = np.argsort(x)\n","print(i)\n","\n","x[i] # используя i посредством прихотливой индексации можно построить отсортированный массив"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 0 3 2 4]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3, 4, 5])"]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","metadata":{"id":"taHGBE5vUk-N"},"source":["Сортировка по строкам и столбцам"]},{"cell_type":"code","metadata":{"id":"tryAamO1Upc3"},"source":["rand = np.random.RandomState(42)\n","x = rand.randint(0, 10, (4, 6))\n","print(x)\n","\n","# сортируем все столбцы\n","print(np.sort(x, axis=0))\n","\n","# сортируем все строки\n","print(np.sort(x, axis=1))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AmA1J4VU7Xun"},"source":["**Частичные сортировки: секционирование**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UN_UGFn37jXe","outputId":"97fdc60a-de59-401e-d0fc-4164ad380bcf"},"source":["x = np.array([7, 2, 3, 1, 6, 5, 4])\n","print(x)\n","print(np.partition(x, 3)) # первые три значения в итоговом массиве - три наименьших значения, а на остальных - все прочие значения\n","\n","y = rand.randint(0, 10, (4, 6))\n","print(y)\n","print(np.partition(y, 2, axis=1)) # секционирование по произвольной оси многомерного массива, в результате получаем массив,у которого на первых двух позициях каждой строки наименьшие значения"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[7 2 3 1 6 5 4]\n","[2 1 3 4 6 5 7]\n","[[9 9 2 6 0 3]\n"," [3 4 6 6 3 6]\n"," [2 5 1 9 8 4]\n"," [5 3 9 6 8 6]]\n","[[0 2 3 6 9 9]\n"," [3 3 4 6 6 6]\n"," [1 2 4 9 8 5]\n"," [3 5 6 9 8 6]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"j0RU6UuDHh1B"},"source":["# Структурированные данные: структурированные массивы и массивы записей"]},{"cell_type":"code","metadata":{"id":"jnNPV-LdH3mr"},"source":["name = ['Alice', 'Bob', 'Cathy', 'Doug']\n","age = [25, 45, 37, 19]\n","weight = [55.0, 85.5, 68.0, 61.5]\n","\n","data = np.zeros(4, dtype={'names':('name', 'age', 'weight'),\n","                          'formats':('U10', 'i4', 'f8')})\n","print(data.dtype)\n","\n","data['name'] = name\n","data['age'] = age\n","data['weight'] = weight\n","print(data)\n","\n","print(data['name'])\n","print(data[0])\n","print(data[-1]['name'])\n","\n","print(data[data['age'] < 30]['name'])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9kEQ0bvBVYR7"},"source":["**Создание структурированных массивов**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aVYBJRFUVcbr","outputId":"cf50edcb-beb3-4a5f-8268-b9e0d3443f17"},"source":["# с использованием словаря\n","np.dtype({'names':('name', 'age', 'weight'),\n","          'formats':('U10', 'i4', 'f8')})\n","\n","np.dtype({'names':('name', 'age', 'weight'),\n","          'formats': ((np.str_, 10), int, np.float32)})"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype([('name', '<U10'), ('age', '<i8'), ('weight', '<f4')])"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-hEG0ePPWLnv","outputId":"bb83d903-1879-43ff-d424-f959a2a3a998"},"source":["# в виде списка кортежей\n","np.dtype([('name', 'S10'), ('age', 'i4'), ('weight', 'f8')])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype([('name', 'S10'), ('age', '<i4'), ('weight', '<f8')])"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iTGJIdWiXlRF","outputId":"f4b66b07-44ba-4574-cf4a-675129a549d4"},"source":["# если названия типов не важны, то\n","np.dtype('S10, i4, f8')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype([('f0', 'S10'), ('f1', '<i4'), ('f2', '<f8')])"]},"metadata":{"tags":[]},"execution_count":10}]}]}